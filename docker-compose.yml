version: '3.8'

services:
  mkdocs:
    image: socket23/mkdocs:latest
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.socket23.rule=Host(`socket23.com`) || Host(`www.socket23.com`)"
        - "traefik.http.routers.socket23.entrypoints=websecure"
        - "traefik.http.routers.socket23.tls=true"
        - "traefik.http.routers.socket23.tls.certresolver=letsencrypt"
        - "traefik.http.services.socket23.loadbalancer.server.port=8000"
        - "traefik.http.services.socket23.loadbalancer.healthcheck.path=/"
        - "traefik.http.services.socket23.loadbalancer.healthcheck.interval=30s"
        # Redirect www to non-www
        - "traefik.http.middlewares.socket23-redirect.redirectregex.regex=^https://www\\.socket23\\.com/(.*)"
        - "traefik.http.middlewares.socket23-redirect.redirectregex.replacement=https://socket23.com/$${1}"
        - "traefik.http.routers.socket23.middlewares=socket23-redirect"
        # Security headers
        - "traefik.http.middlewares.socket23-headers.headers.sslredirect=true"
        - "traefik.http.middlewares.socket23-headers.headers.stsSeconds=31536000"
        - "traefik.http.middlewares.socket23-headers.headers.stsIncludeSubdomains=true"
        - "traefik.http.middlewares.socket23-headers.headers.stsPreload=true"
        - "traefik.http.middlewares.socket23-headers.headers.forceSTSHeader=true"
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        mode: host
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=UTC
    volumes:
      - ./docs:/app/docs:ro
      - ./mkdocs.yml:/app/mkdocs.yml:ro
    networks:
      - traefik-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  traefik-network:
    driver: overlay
    external: true
